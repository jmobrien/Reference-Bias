model{

# ---------------------------------------------  
# TERM DEFINITIONS:
# N... total number of students
# group... indicator of class membership
# J... number of schools
# grad... binary variable of graduation
# math... Academic Diligence Task (ADT) score
# ---------------------------------------------  


# ---------------------------------------------  
# L1 MODEL: cycle through for each case (802):  
	# L1 FORMULA: logit of graduation as outcome (link function) predicted by:
			# beta.0: intercept
			# beta.w[ithin]: estimate associated with L1 math 
				# (math - math.b[etween])
			# beta.b[etween]: estimate associated with L2 math.b[etween], 
				# varying w/each schoolID
			# delta - random intercept associated with school ID (estimated next section)
			# beta.3 - estimate associated with Ravens score (cognitive ability)
			# beta.3.m - estimate associated with missing ravens (dummy code)   
	# OUTCOME: Persistence defined to distribute as a Bernoulli variable 
		# (binary outcomes)
     # PREDICTOR: Individual math scores distribute as a normal distribution around each 
        # school's mean (which is estimated in L2 model below)
# ---------------------------------------------  

for(i in 1:802){
   
     grad6[i] ~ dbern(p[i]) 
                 
     logit(p[i]) <- beta.0 + beta.w * (math[i] - math.b[schoolID[i]])
                     + beta.b * math.b[schoolID[i]] + delta[schoolID[i]]
                     + beta.3 * ravens[i] +  beta.3.m * ravens.MD[i]
        
          math[i] ~ dnorm(math.b[schoolID[i]], invSigmaSqrd.w)

}

# ---------------------------------------------
# L2 MODEL: cycle through for each school (15):
     # Estimate of random persistence intercept by school, normally distributed
	 # Estimate of school-level math mean 
# ---------------------------------------------  

for(j in 1:15){
     
     delta[j] ~ dnorm(0, invTauSqrd.p) #... between-class residual of graduation
     
     math.b[j] ~ dnorm(mu.x, invTauSqrd.b) #... latent class mean of math
     
}

# noninformative priors:
beta.0 ~ dnorm(0, 0.001) #... intercept of graduation
beta.w ~ dnorm(0, 0.001) #... within-class coefficient for math
beta.b ~ dnorm(0, 0.001) #... between-class coefficient for math
beta.3 ~ dnorm(0, 0.001) #... cognitive ability coefficient
beta.3.m ~ dnorm(0, 0.001) #... cognitive missing dummy coefficienct

mu.x ~ dnorm(0, 0.001) #... grand mean of math

sigmaSqrd.w ~ dunif(0, 100) #... within-class variance of math
invSigmaSqrd.w <- 1 / sigmaSqrd.w #... associated precision

tauSqrd.p ~ dunif(0, 100) #... between-class residual variance of graudation
invTauSqrd.p <- 1 / tauSqrd.p #... associated precision

tauSqrd.b ~ dgamma( 0.001, 0.001 )
invTauSqrd.b <- 1 / tauSqrd.b #... between-class variance of math


}

# Code adapted from (Zitzmann, LÃ¼dtke, & Robitzsch, 2015) as a logistic regression.
# Used guidance from:
  # http://www.columbia.edu/~cjd11/charles_dimaggio/DIRE/styled-4/styled-11/code-8/#fnref10
  # https://www4.stat.ncsu.edu/~reich/ABA/code/GLM to convert to GLM
  									